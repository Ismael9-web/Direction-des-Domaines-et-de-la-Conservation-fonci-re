
services:
  zeebe:
    image: camunda/zeebe:8.5.24
    container_name: zeebe
    ports:
      - "26500:26500"
      - "9600:9600"
    environment:
      - ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_CLASSNAME=io.camunda.zeebe.exporter.ElasticsearchExporter
      - ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_ARGS_URL=http://elasticsearch:9200
      - ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_ARGS_BULK_SIZE=1
    depends_on:
      - elasticsearch
    volumes:
      - zeebe_data:/usr/local/zeebe/data
    networks:
      - camunda-platform

  operate:
    image: camunda/operate:8.5.20
    container_name: operate
    ports:
      - "8081:8080"
    environment:
      - CAMUNDA_OPERATE_ZEEBE_GATEWAYADDRESS=zeebe:26500
      - CAMUNDA_OPERATE_ELASTICSEARCH_URL=http://elasticsearch:9200
      - CAMUNDA_OPERATE_ZEEBEELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - zeebe
      - elasticsearch
    networks:
      - camunda-platform

  tasklist:
    image: camunda/tasklist:8.5.22
    container_name: tasklist
    ports:
      - "8082:8080"
    environment:
      - CAMUNDA_TASKLIST_ZEEBE_GATEWAYADDRESS=zeebe:26500
      - CAMUNDA_TASKLIST_ELASTICSEARCH_URL=http://elasticsearch:9200
      - CAMUNDA_TASKLIST_ZEEBEELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - zeebe
      - elasticsearch
    networks:
      - camunda-platform

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.22
    container_name: elasticsearch
    ports:
      - "9200:9200"
    environment:
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - xpack.security.enabled=false
      - cluster.name=elasticsearch
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
    networks:
      - camunda-platform

  # MinIO Object Storage
  minio_DDCF:
    image: minio/minio:RELEASE.2024-08-26T15-33-07Z
    container_name: minio_DDCF
    ports:
      - "9000:9000"      # MinIO API
      - "9001:9001"      # MinIO Console
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin123
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - camunda-platform
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # MinIO Client for bucket creation
  minio-client-DDCF:
    image: minio/mc:RELEASE.2024-08-26T10-49-58Z
    container_name: minio-client-DDCF
    depends_on:
      - minio_DDCF
    networks:
      - camunda-platform
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add minio http://minio:9000 minioadmin minioadmin123) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc mb minio/react-apps;
      /usr/bin/mc mb minio/workflows;
      /usr/bin/mc mb minio/connectors;
      /usr/bin/mc policy set public minio/react-apps;
      exit 0;
      "

  # Camunda Connector Runtime (for external connectors)
  connector-runtime:
    image: camunda/connectors-bundle:8.5.5
    container_name: connector-runtime
    ports:
      - "8085:8080"
    environment:
      - ZEEBE_CLIENT_BROKER_GATEWAY-ADDRESS=zeebe:26500
      - ZEEBE_CLIENT_SECURITY_PLAINTEXT=true
      - CAMUNDA_CONNECTOR_POLLING_ENABLED=true
      - CAMUNDA_CONNECTOR_WEBHOOKS_ENABLED=true
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin123
    depends_on:
      - zeebe
      - minio_DDCF
    networks:
      - camunda-platform

volumes:
  zeebe_data:
  elastic_data:
  minio_data:

networks:
  camunda-platform: